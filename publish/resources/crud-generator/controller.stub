<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;

class DummyClass extends Controller
{
    public function index(Request $request)
    {
        $this->authorize('browse-${{crudName}}');
        if($request->ajax()){
            ${{crudName}} = {{modelName}}::latest();
            return datatables(${{crudName}})
                ->addColumn('action', function (${{crudName}}) {
                    if (auth()->user()->can('read-{{crudName}}')) {
                        $act[] = '<a href="'.route('{{crudName}}.show',${{crudName}}->id).'" title="View {{modelName}}" class="btn btn-info btn-sm"><i class="fa fa-eye" aria-hidden="true"></i></a>';
                    }
                    if (auth()->user()->can('edit-{{crudName}}')) {
                        $act[] = '<a href="'.route('{{crudName}}.edit',${{crudName}}->id).'" title="Edit {{modelName}}" class="btn btn-primary btn-sm"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>';
                    }
                    if (auth()->user()->can('delete-{{crudName}}')) {
                        $act[] = '<a href="'.route('{{crudName}}.destroy', ${{crudName}}->id).'" title="Delete {{modelName}}" class="deleteBtn btn btn-danger btn-sm"><i class="fa fa-trash-o" aria-hidden="true"></i></a>';
                    }
                    return implode("\n", $act);
                })
                ->toJson();
        }

        return view('{{viewPath}}{{viewName}}.index');
    }
    public function create()
    {
        $this->authorize('add-${{crudName}}');
        return view('{{viewPath}}{{viewName}}.create');
    }
    public function store(Request $request)
    {
        $this->authorize('add-${{crudName}}');
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        {{modelName}}::create($requestData);

        return redirect()->route('{{viewName}}.index')->with('flash_message', '{{modelName}} added!');
    }
    public function show($id)
    {
        $this->authorize('read-${{crudName}}');
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
    }
    public function edit($id)
    {
        $this->authorize('edit-${{crudName}}');
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
    }
    public function update(Request $request, $id)
    {
        $this->authorize('edit-${{crudName}}');
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        ${{crudNameSingular}}->update($requestData);

        return redirect()->route('{{viewName}}.index')->with('flash_message', '{{modelName}} updated!');
    }
    public function destroy($id)
    {
        $this->authorize('delete-${{crudName}}');
        {{modelName}}::destroy($id);

        return redirect()->route('{{viewName}}.index')->with('flash_message', '{{modelName}} deleted!');
    }
}
